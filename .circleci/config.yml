# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

parameters:
  should_publish:
    description: Whether the CLI should be published to repositories
    type: boolean
    default: false

jobs:
  publish:
    docker:
      - image: circleci/python:3.6.1
    parameters:
      registry_url:
        description: Registry URL to upload the CLI to
        type: string
        default: https://upload.pypi.org/legacy/
      username:
        description: Twine username
        type: string
      password:
        description: Twine password
        type: string
    environment:
      TWINE_REPOSITORY_URL: <<parameters.registry_url>>
      TWINE_USERNAME: <<parameters.username>>
      TWINE_PASSWORD: <<parameters.password>>
    steps:
      - when:
          condition: <<pipeline.parameters.should_publish>>
          steps:
            - checkout
            - run: pip install --user --upgrade setuptools twine wheel
            - run: setup.py sdist bdist_wheel
            - run: twine upload dist/*
      - unless:
          condition: <<pipeline.parameters.should_publish>>
          steps:
            - run: echo "Skipping publish"

orbs:
  cloudsmith_ci:
    jobs:
      execute:
        parameters:
          service_name:
            description: Name of the command to execute
            type: string
          command:
            description: The command to execute
            type: string
          no_output_timeout:
            description: Number of seconds to let job run without output before timeout
            type: integer
            default: 600
          is_test_suite:
            description: Should the job collect test results and coverage?
            type: boolean
            default: false
        executor: cloudsmith_executor
        working_directory: ~/repo
        steps:
          - checkout
          - restore_cache:
              keys:
                - v1-dependencies-{{ checksum "requirements/development.py3.txt" }}
                - v1-dependencies-
          - run:
              name: Install dependencies
              command: |
                python3 -m venv .venv
                . .venv/bin/activate
                pip install -r requirements/development.py3.txt
          - when:
              condition: <<parameters.is_test_suite>>
              steps:
                - run:
                    name: Setup Code Climate coverage reporter
                    command: |
                      test "$CIRCLE_LOCAL" == "true" || {
                        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter;
                        chmod +x ./cc-test-reporter;
                      }
                - run:
                    name: Notify Code Climate of pending test report
                    command:
                      test "$CIRCLE_LOCAL" == "true" || {
                        ./cc-test-reporter before-build;
                      }
          - save_cache:
              paths:
                - .venv
              key: v1-dependencies-{{ checksum "requirements/development.py3.txt" }}
          - run:
              name: Run <<parameters.service_name>>
              command: |
                . .venv/bin/activate
                <<parameters.command>>
                echo $? > /tmp/run_exit_code
              no_output_timeout: <<parameters.no_output_timeout>>
          - when:
              condition: <<parameters.is_test_suite>>
              steps:
                - store_test_results:
                    path: ./reports
                - store_artifacts:
                    path: ./reports
                - deploy:
                    command: |
                      test "$CIRCLE_LOCAL" == "true" || {
                        . .venv/bin/activate
                        cp ./reports/coverage.xml .;
                        ./cc-test-reporter after-build -t coverage.py --exit-code $(cat /tmp/run_exit_code);
                      }

    executors:
      cloudsmith_executor:
        docker:
          - image: circleci/python:3.6.1


workflows:
  commit:
    jobs:
      - cloudsmith_ci/execute:
          name: isort
          service_name: isort
          command: isort -rc -c
      - cloudsmith_ci/execute:
          name: black
          service_name: black
          command: black --check .
      - cloudsmith_ci/execute:
          name: flake8
          service_name: flake8
          command: flake8
      - cloudsmith_ci/execute:
          name: pylint
          service_name: pylint
          command: pylint --rcfile=.pylintrc cloudsmith_cli
          no_output_timeout: 1200
      - cloudsmith_ci/execute:
          name: pytest
          service_name: pytest
          command: pytest --cov-report xml:./reports/coverage.xml --junitxml ./reports/pytest.xml
          is_test_suite: true
      - publish:
          requires:
            - isort
            - black
            - flake8
            - pylint
            - pytest
          filters:
            branches:
              only:
                - master
          name: cloudsmith
          registry_url: https://python.cloudsmith.io/cloudsmith/api/
          username: ${CLOUDSMITH_USERNAME}
          password: ${CLOUDSMITH_PASSWORD}
      - publish:
          requires:
            - isort
            - black
            - flake8
            - pylint
            - pytest
          filters:
            branches:
              only:
                - master
          name: pypi
          username: ${PYPI_USERNAME}
          password: ${PYPI_PASSWORD}
